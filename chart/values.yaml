nameOverride: ""
fullnameOverride: ""

global:
  # -- Image pull secrets added to pod spes generated by this chart.
  imagePullSecrets:
    - registry-secret

  # -- Docker registry for KOBIL provided docker images
  registry: kobilsystems.azurecr.io

  # -- Limits for kubernetes object names
  limits:
    lengths:
      commonName: 63
      releaseName: 16
      fullname: 43

  annotations:
    # -- Custom annotations added to deployment metadata and pod spec
    common: {}

    # -- Custom annotations added to pod spec
    workload: {}

  labels:
    # -- Custom labels added to pod spec
    workloadPod: {}

  routing:
    # -- External domain name
    domain: local

    # -- Name of kubernetes TLS secret for the required domain and subdomains
    tlsSecret: tls-secret

    ingress:
      # -- Globally enable/disable creation of ingress resources.
      enabled: false

      # -- Ingress class name of the ingress controller.
      class: ~

    istio:
      # -- Globally enable/disable creation of istio ingress gateways
      # and virtual services. Requires istio operator.
      enabled: false

      options:
        # -- Globally enable/disable injection of envoy sidecars.
        inject: false

# -- Value of label `app.kubernetes.io/part-of`
# added to resources generated by this chart.
partof: arabox

# -- Value of label `app.kubernetes.io/component`
# added to resources generated by this chart.
component: kobil-go

config:
  postgresURL: 'Postgres DB URL'
  payloadSecret: 'Payload Secret'

# -- Number of desired pods for this deployment.
replicaCount: 1

mainContainer:
  # -- Image repository, tag, and pull policy. Tag is automatically
  # set to `Chart.appVersion` when using the default value `''`.
  image:
    repository: arabox/kobil-go-website
    tag: ''
    pullPolicy: IfNotPresent

  # -- Entrypoint command and args
  # (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#entrypoint).
  entrypoint: {}

  # -- Readiness probe
  # (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#entrypoint).
  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  # -- Liveness probe
  # (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#entrypoint).
  livenessProbe:
    tcpSocket:
      port: http
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  # -- Resource requests and limits
  # (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources).
  resources:
    limits:
      memory: "512Mi"
    requests:
      cpu: "300m"
      memory: "512Mi"

  # -- Environment variables. Defined as described in
  # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables
  env:
   - name: NEXT_PUBLIC_PORT
     value: "{{ .Values.mainContainer.ports.http.target }}"
   - name: POSGRES_URL
     value: '{{ .Values.config.postgresURL }}'
   - name: PAYLOAD_SECRET
     value: '{{ .Values.config.payloadSecret }}'

  # -- SecurityContext defining the security options the container should be run with
  # (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1).
  securityContext: {}

  # -- Ports to expose from the main container and via the kubernetes service.
  ports:
    http:
      target: 8080
      service: 80

sidecars:
  tailLog: {}

routing:
  # -- External subdomain
  subdomain: ""

  istio:
    # -- Enable/disable creation and virtual services.
    # Requires `global.routing.istio.enabled: true`.
    enabled: true

    options:
      # -- Enable/disable injection of envoy sidecars.
      # Requires `global.routing.istio.options.inject: true`.
      inject: true

    # -- Definition of the hosts and paths to be added to istio virtual service.
    hosts:
      - host: "{{ .Values.global.routing.domain }}"
        paths:
          public:
            - prefix: /

  ingress:
    # -- Enable/disable creation and ingress resource.
    # Requires `global.routing.ingress.enabled: true`.
    enabled: false

    # -- Optional annotations to add to the ingress resource
    annotations: {}

    # -- Definition of the hosts and paths to be added to ingress resource.
    hosts:
      - host: '{{ .Values.global.routing.domain }}'
        paths:
          - path: /
            pathType: ImplementationSpecific

# -- Declaration of the horizontal pod autoscaler
# (https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/,
# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/horizontal-pod-autoscaler-v2beta2/).
# Requires metrics-server (https://github.com/kubernetes-sigs/metrics-server).
# Uses `metrics.type: Resource` to monitor resource utilization of all
# containers of the pod.
# Set `enabled: true` to enable and define `minReplicas` and `maxReplicas` accordingly.
# Set `targetCPUUtilizationPercentage` and/or `targetMemoryUtilizationPercentage`
# to the desired percentage between 1 and 100 of the resource request
# to include it as metric in the autoscaler.
# Requires `resources.requests` to be set for cpu and/or memory of all containers.
# Additional behavior can be defined using `behavior`.
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: ~
  targetMemoryUtilizationPercentage: ~
  behavior: {}

service:
  # -- Type of the kubernetes service resource
  # (https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/#ServiceSpec).
  type: ClusterIP

pod:
  # -- Service account used for the pod. The service account is created automatically
  # when `create: true`. Optional annotations can be set via value `annotations`.
  # To use an existing service account set `create: false` and
  # `name` to the name of the existing service account.
  serviceAccount:
    create: true
    annotations: {}
    name: ""

  # -- Pod security context
  # (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context).
  securityContext: {}

  # -- Parameters to define pod scheduling
  # (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling).
  scheduling:
    nodeSelector: {}
    tolerations: []
    affinity: {}

tests:
  # -- Basic helm test sending an http GET request to the defined endpoint.
  connection:
    protocol: "http"
    path: /
    image:
      repository: it-solutions/shell-tools-micro
      tag: '1.0.6'
      pullPolicy: IfNotPresent

initContainer: {}
